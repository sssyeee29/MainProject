<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecovery.mapper.FreeReplyMapper">

<!--
* 무료나눔 댓글 Mapper XML
* 댓글 및 대댓글 관련 SQL문을 정의한 MyBatis 매퍼 파일
*
* @author : yeonsu
* @fileName : FreeReplyMapper.xml
* @since : 250714
-->

    <!-- 댓글 등록 -->
    <insert id="insert" parameterType="com.ecovery.domain.FreeReplyVO" useGeneratedKeys="true" keyProperty="replyId">
        INSERT INTO free_reply (
                                free_id, member_id,
                                content, parent_id, created_at
        )
        VALUES (
                #{freeId}, #{memberId},
                #{content}, #{parentId}, NOW()
        )
    </insert>

    <!-- 댓글 조회 -->
    <select id="read" resultType="com.ecovery.dto.FreeReplyDto">
        SELECT r.reply_id,
               r.free_id,
               r.member_id,
               r.content,
               r.parent_id,
               r.created_at,
               m.nickname
        FROM free_reply r
        JOIN member m ON r.member_id = m.member_id
        WHERE r.reply_id = #{replyId}
    </select>

    <!-- 댓글 수정 -->
    <update id="update" parameterType="com.ecovery.domain.FreeReplyVO">
        UPDATE free_reply
        SET content = #{content}
        WHERE reply_id = #{replyId}
    </update>


    <!-- 댓글 삭제 -->
    <delete id="delete" parameterType="Long">
        DELETE FROM free_reply
        WHERE reply_id = #{replyId}
    </delete>


    <!-- 게시글의 부모 댓글 목록 조회 (parent_id IS NULL) -->
    <select id="getParentReplies" resultType="com.ecovery.dto.FreeReplyDto">
        SELECT
            r.reply_id, r.free_id, r.member_id,
            r.content, r.parent_id, r.created_at,
            m.nickname
        FROM free_reply r
        JOIN member m ON r.member_id = m.member_id
        WHERE r.free_id = #{freeId}
        AND r.parent_id IS NULL
        <choose>
            <when test="sortType == 'recent'">
                ORDER BY r.created_at DESC
            </when>
            <otherwise>
                ORDER BY r.created_at ASC
            </otherwise>
        </choose>
        LIMIT #{criteria.amount} OFFSET #{criteria.offset}
    </select>

    <!-- 특정 부모댓글에 달린 대댓글(자식 댓글) 목록 조회 -->
    <select id="getChildReplies" resultType="com.ecovery.dto.FreeReplyDto">
        SELECT
            r.reply_id, r.free_id, r.member_id,
            r.content, r.parent_id, r.created_at,
            m.nickname
        FROM free_reply r
        JOIN member m ON r.member_id = m.member_id
        WHERE r.parent_id = #{parentId}
        ORDER BY r.created_at ASC
    </select>

    <!-- 게시글의 전체 댓글 수 (부모 + 대댓글 포함) -->
    <select id="getTotalReplyCount" resultType="int">
        SELECT COUNT(*)
        FROM free_reply
        WHERE free_id = #{freeId}
    </select>

    <!-- 특정 부모 댓글 대댓글 수 조회-->
    <select id="getChildReplyCount" resultType="int">
        SELECT COUNT(*)
        FROM free_reply
        WHERE parent_id = #{parentId}
    </select>



</mapper>